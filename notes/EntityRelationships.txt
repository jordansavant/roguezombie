//////////////////////////////////////////////////////////////////////////////////////////
// Clearence based A* https://aigamedev.com/open/tutorials/clearance-based-pathfinding/ //
//////////////////////////////////////////////////////////////////////////////////////////


  ///////////////////
 /// SERVER SIDE ///
///////////////////

// Manages all tiles, bodies and items
World
{
	Vector<Tile>
	Vector<Body>
	Vector<Item>
	
	Update()
	{
		// Update all items
	}
	
	GetPath(startX, startY, endX, endY, size, allowedFunction, neighborFunction)
	{
	}
	
	prepareSnapshot()
}

// Can have 0 to 1 body
Tile
{
	Type
	{
		Ground,
		Water
	}
	Fixed {
		X, Y, CenterX, CenterY
		Width, Height
		Type
	}
	Delta {
		Body
		Items
	}
	
	prepareSnapshot()
	
	handleSnapshot()
}

// Can occupy more than one tile
// Can have 0 to * items
Body
{
	Type
	{
		Structure,
		Character
	}
	Fixed {
		Type
		MaxHealth
	}
	Delta {
		Items
		X, Y, Width, Height
		TileSize
		Health
	}
	Path<Vector2>
	
	prepareSnapshot()
	
	handleSnapshot()
	
	Update()
	{
		UpdatePosition();
		UpdateTiles();
	}
	
	UpdatePosition()
	{
		if(Path.size() > 0)
		{
			Next = path.pop();
			X = Next.X
			Y = Next.Y
		}
	}
	
	// Update all tiles that I am on
	UpdateTiles()
	{
		tiles = World.getTilesWithinRectangle(X, Y, Width, Height)
		foreach(tiles as tile)
		{
			tile.setOccupant(this)
		}
	}
	
	MoveNorth()
	{
		Path = World.getPath(X, Y, X, Y - World.TileHeight, TileSize, CanOccupy, World.CardinalNeighbors);
	}
	
	CanOccupy(Tile* t)
	{
		if(t.Body)
		{
			return false;
		}
		return true;
	}
}
	
	Structure : Body
	{
	}
	
		Wall : Structure
		{
		}
		
		Terminal: Structure
		{
		}
	
	Character : Body
	{
		Delta {
			intelligence
		}
	}
		
		Zombie : Character
		{
		}
		
		AttackDog : Character
		{
		}
	
	
// Can belong to tiles, bodies (or other items?)
Item
{
	Items
}


